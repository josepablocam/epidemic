dat
read.csv("test.csv")
read.text("test.csv")
read("test.csv")
read.text
?read.csv
?system
dat <- system("./a.out", intern=T)
dat
dat[-2]
dat[-1:2]
dat[- 1:2]
dat[-(1:2)]
dat[-(1:2),]
dat
dat[-c(1,2)]
read.csv(dat[-c(1,2)])
?read.csv
read.csv(text = dat[-c(1,2)], header=FALSE)
diseases <- data.frame()
diseases
diseases <- data.frame(base_ir = c(), exposure_ir = c(), mortality = c(), sick_len = c())
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.065, sick_len = 2)
rbind(d1,d2,d3)
diseases <- rbind(d1, d2, d3))
diseases <- rbind(d1, d2, d3)
diseases
?sprintf
simulate <- function(disease){
command <- sprintf("./epi_sim -n %d -d %d -c %d -b %f -e %f -m %d -l %d",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
simulate(d1)
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#a simple analysis of our epidemic simulator#
setwd("/Users/josecambronero/PersonalProjects/epidemic/src")
POP_SIZE = 1e6
SIM_LEN = 100
CONNECTIVITY = 10
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.065, sick_len = 2)
diseases <- rbind(d1, d2, d3)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %d -d %d -c %d -b %f -e %f -m %d -l %d",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
simulate(d1)
#a simple analysis of our epidemic simulator#
setwd("/Users/josecambronero/PersonalProjects/epidemic/src")
POP_SIZE = 1e6
SIM_LEN = 100
CONNECTIVITY = 10
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.065, sick_len = 2)
diseases <- rbind(d1, d2, d3)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %d -b %f -e %f -m %d -l %d",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
simulate(d1)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %d -b %f -e %f -m %i -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
sim(d1)
simulate(d1)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %i -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
simulate(d1)
sprintf("%d", 1)
sprintf("a -n %d", 1)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %i -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %i -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
d1$base_ir, d1$exposure_ir, d1$mortality, d1$sick_len)
d1
d1$base_ir
sprintf("./epi_sim -n %f -d %f -c %f -b %f -e %f -m %f -l %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
d1$base_ir, d1$exposure_ir, d1$mortality, d1$sick_len)
sprintf("./epi_sim -n %i -d %i",1, 2)
disease <- d1
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %i -l %i", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
sprintf("./epi_sim -n %i -d %i", POP_SIZE, SIM_LEN)
sprintf("./epi_sim -n %i -d %i -c %i", POP_SIZE, SIM_LEN, CONNECTIVITY)
sprintf("./epi_sim -n %i -d %i -c %i -b %f", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir, disease$exposure_ir)
disease$exposure_ir)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir,
disease$exposure_ir)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir,
disease$exposure_ir, disease$mortality)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i", POP_SIZE, SIM_LEN, CONNECTIVITY, disease$base_ir,
disease$exposure_ir, disease$mortality, disease$sick_len)
sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
commmand
}
simulate(f1)
simulate(d1)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
command
}
simulate(d1)
simulate(d2)
simulate(d3)
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- rbind(d1, d2, d3)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
command
}
simulate(d1)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
system(command, intern = TRUE)
}
simulate(d1)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
?read.csv
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
data <- system(command, intern = TRUE)
read.csv(text = data, header = FALSE)
}
simulate(d1)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
simulate(d1)
results <- simulate(d1)
cbind(results, d1)
apply(diseases, simulate)
apply(diseases, function(x) simulate(x))
apply(diseases, 1,  function(x) simulate(x))
apply(diseases, 2,  function(x) simulate(x))
by(diseases, simulate)
by(diseases, 1:nrow(diseases), simulate)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len)
data <- system(command, intern = TRUE)
data <- read.csv(text = data, header = TRUE)
cbind(data, disease)
}
simulate(d1)
lapply
?lapply
list(diseases)
as.list(diseases)
split(diseases)
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- list(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- list(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- list(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
d1
d2
d3
d4
d4
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.fram(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- list(d1, d2, d3)
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- list(d1, d2, d3)
diseases
lapply(diseases, simulate)
results <- lapply(diseases, simulate)
results
cbind(results)
rbind(results)
results
unlist(results)
results <- do.call(results, rbind)
results <- do.call(rbind, results)
head(results)
sums
cumsum(results$day == 1)
results$disease_id <- cumsum(results$day == 1)
results
results <- melt(results, id.vars = c("day", "disease_id", "base_ir", "exposure_ir", "mortality"))
head(results)
?melt
results <- ddply(results, .(disease_id, day), transfrom, pct = value / sum(value))
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
head(results)
library(plyr)
head(results)
?dcats
?dcast
dcast
head(results)
dcast(head(results), dat ~)
dcast(head(results), day ~ pct )
dcast(head(results), day ~ variable)
dcast(head(results), day + disease_Id ~ variable)
head(results)
dcast(head(results), day + disease_id + base_ir + exposure_ir + mortality ~ variable)
dcast(head(results), day + disease_id + base_ir + exposure_ir + mortality + value ~ variable)
dcast(head(results), day + disease_id + base_ir + exposure_ir + mortality ~ variable + value)
head(results)
?melt
#a simple analysis of our epidemic simulator#
setwd("/Users/josecambronero/PersonalProjects/epidemic/src")
library(ggplot2)
library(reshape2)
library(plyr)
POP_SIZE <- 100000
SIM_LEN <- 100
CONNECTIVITY <- 10
IMMUNITY <- 0
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.05, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- list(d1, d2, d3)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
data <- read.csv(text = data, header = TRUE)
cbind(data, disease)
}
results <- lapply(diseases, simulate)
results
results <- do.call(rbind, results)
results
head(results)
results$disease_id <- cumsum(results$day == 1)
test <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
head(test)
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
test <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
test
head(test)
results <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
test <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
head(test)
dcast(test, stat ~ value)
head(dcast(test, stat ~ value))
dcast(head(test), stat ~ value)
?dcast
head(test)
dcast(head(test), day + base_ir + exposure_ir +mortality + sick_len + disease_id ~ value)
dcast(head(test), state + state ~ value )
dcast(head(test),  value ~ state + state )
dcast(head(test),  value ~ state + stat )
head(test)
?dcast
dcast(melt(tips), sex ~ smoker, mean, subset = .(variable == "total_bill"))
tips
head(tips)
head(test)
dcast(head(test), stat + state ~ value)
dcast(head(test),  ~ state + state)
dcast(head(test),  day ~ state + state)
dcast(head(test),  day ~ state + stat)
test$stat
unique(test$stat)
head(test)
dcast(head(test), state + stat ~ value)
dcast(head(test), state + stat )
dcast(head(test), day ~ state + stat )
dcast(test, day ~ state + stat )
dcast(test,  ~ state + stat )
dcast(test,  . ~ state + stat )
dcast
names(results)
dcast(test,  day + disease_id ~ state + stat )
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
head(results)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
head(results)
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
head(results)
results <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
head(results)
results <- dcast(results,  day + disease_id ~ state + stat)
head(results)
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
results <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
head(results)
results <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
results <- melt(results, measure.vars = c("value", "pct"), variable.name = "stat")
head(results)
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
head(results)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
head(results)
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
head(results)
ggplot(results, aes(x = day, y = pct, group = state)) +
geom_line(aes(color = state)) + facet_wrap( ~ disease_id)
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_wrap(disease_id ~ state)
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_grid(disease_id ~ state)
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_grid(state ~ disease_id)
simulate(d1)
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
simulate(d1)
rm(ls=ls())
rm(list=ls())
setwd("/Users/josecambronero/PersonalProjects/epidemic/src")
library(ggplot2)
library(reshape2)
library(plyr)
POP_SIZE <- 100000
SIM_LEN <- 100
CONNECTIVITY <- 10
IMMUNITY <- 0
#medium baseline infection rate, medium exposure rate, low mortality, long length
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.2, mortality = 0.005, sick_len = 14)
#low baseline, med exposure, high mortality, medium length
d2 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lenght
d3 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- list(d1, d2, d3)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
dat <- simulate(d1)
dat <- simulate(d1)
dat
head(dat)
melt(dat, id.vars="day")
ggplot(melt(dat, id.vars="day"), aes(x = day, y = value, group = variable)) + geom_line(aes(color = variable))
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.2, mortality = 0.005, sick_len = 4)
dat <- simulate(d1)
ggplot(melt(dat, id.vars="day"), aes(x = day, y = value, group = variable)) + geom_line(aes(color = variable))
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.05, mortality = 0.005, sick_len = 4)
dat <- simulate(d1)
ggplot(melt(dat, id.vars="day"), aes(x = day, y = value, group = variable)) + geom_line(aes(color = variable))
dat <- simulate(d1)
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.1, mortality = 0.005, sick_len = 4)
dat <- simulate(d1)
ggplot(melt(dat, id.vars="day"), aes(x = day, y = value, group = variable)) + geom_line(aes(color = variable))
d1 <- data.frame(base_ir = 0.01, exposure_ir = 0.1, mortality = 0.01, sick_len = 4)
dat <- simulate(d1)
ggplot(melt(dat, id.vars="day"), aes(x = day, y = value, group = variable)) + geom_line(aes(color = variable))
#low baseline infection rate, medium exposure rate, low mortality, medium length
d1 <- data.frame(base_ir = 0.005, exposure_ir = 0.1, mortality = 0.01, sick_len = 4)
#medium base line, low exposure rate, very low mortality, long length
d2 <- data.frame(base_ir = 0.02, exposure_ir = 0.1, mortality = 0.005, sick_len = 4)
#low baseline, med exposure, high mortality, medium length
d3 <- data.frame(base_ir = 0.001, exposure_ir = 0.15, mortality = 0.65, sick_len = 7)
#low baseline, high exposure, high mortality, short lengh4
d4 <- data.frame(base_ir = 0.001,  exposure_ir = 0.5, mortality = 0.65, sick_len = 2)
diseases <- list(d1, d2, d3, d4)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
head(results)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
head(results)
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
head_results)
head_results
head(results)
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_grid(state ~ disease_id)
#low baseline infection rate, medium exposure rate, low mortality, medium length
d1 <- data.frame(base_ir = 0.001, exposure_ir = 0.1, mortality = 0.01, sick_len = 4)
#medium base line, low exposure rate, very low mortality, long length
d2 <- data.frame(base_ir = 0.01, exposure_ir = 0.1, mortality = 0.005, sick_len = 4)
#very low baseline, medium exposure, high mortality, medium length
d3 <- data.frame(base_ir = 0.0001, exposure_ir = 0.1, mortality = 0.65, sick_len = 4)
#low baseline, high exposure, high mortality, short length
d4 <- data.frame(base_ir = 0.0001,  exposure_ir = 0.7, mortality = 0.8, sick_len = 4)
diseases <- list(d1, d2, d3, d4)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_grid(state ~ disease_id)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
#low baseline infection rate, medium exposure rate, low mortality, medium length
d1 <- data.frame(base_ir = 0.001, exposure_ir = 0.1, mortality = 0.01, sick_len = 4)
#medium base line, low exposure rate, very low mortality, long length
d2 <- data.frame(base_ir = 0.01, exposure_ir = 0.1, mortality = 0.005, sick_len = 4)
#very low baseline, medium exposure, high mortality, medium length
d3 <- data.frame(base_ir = 0.0001, exposure_ir = 0.1, mortality = 0.65, sick_len = 4)
#low baseline, high exposure, high mortality, short length
d4 <- data.frame(base_ir = 0.0,  exposure_ir = 0.7, mortality = 0.8, sick_len = 4)
diseases <- list(d1, d2, d3, d4)
simulate <- function(disease){
command <- sprintf("./epi_sim -n %i -d %i -c %i -b %f -e %f -m %f -l %i -i %f",
POP_SIZE, SIM_LEN, CONNECTIVITY,
disease$base_ir, disease$exposure_ir, disease$mortality, disease$sick_len, IMMUNITY)
data <- system(command, intern = TRUE)
read.csv(text = data, header = TRUE)
}
results <- lapply(diseases, simulate)
results <- do.call(rbind, results)
results$disease_id <- cumsum(results$day == 1)
results <- melt(results, measure.vars = c("sick", "dead", "healthy"), variable.name = "state")
results <- ddply(results, .(disease_id, day), transform, pct = value / sum(value))
ggplot(results, aes(x = day, y = pct)) +
geom_line(aes(color = state)) + facet_grid(state ~ disease_id)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
results
subset(results, disease_id == 3)
dcast(subset(results, disease_id == 3), day + disease_id ~ state + value)
dcast(subset(results, disease_id == 3), day + disease_id ~ state )
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
source('~/PersonalProjects/epidemic/src/epi_analysis.R', echo=TRUE)
